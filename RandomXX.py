#–ë–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö.
#–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ –±–µ—Å–µ–¥—É, —Ç–∞–∫ –∂–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –≤ —Å–∫—Ä–∏–ø—Ç–µ, –∫—Ç–æ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ —Ä–æ–ª–∏—Ç—å.
#–§–∞–π–ª Ball.dat —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤

#–†–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫–∏, –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –º–∞—à–∏–Ω–∞ —Å –±–µ–ª—ã–º IP, –ª–∏–±–æ –¥–µ–¥–∏–∫.
#author: Golubev Ivan 

import linecache
import tokenz
import random
import math
import telebot
import requests
import json
import cherrypy

webhook_host = '' # –£–∫–∞–∑–∞—Ç—å –ø—É–±–ª–∏—á–Ω—ã–π IP
webhook_port = 443
webhook_listen = '0.0.0.0'
webhook_SSL_cert = '/home/ubuntu/Boot_webhook_pooling/webher_cert.pem' # –°–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω—ã–π —Å–µ—Ä—Ç
webhook_SSL_PRIV = '/home/ubuntu/Boot_webhook_pooling/webher_pkey.pem' # –ö–ª—é—á —Å–µ—Ä—Ç–∞
webhook_url_kekbase = "https://%s:%s" % (webhook_host, webhook_port)
webhook_url_path = "/%s/" % (tokenz.token_for_bot)

bot = telebot.TeleBot(tokenz.token_for_bot)

class WebhookServer(object):
    @cherrypy.expose
    def index(self):
        if 'content-length' in cherrypy.request.headers and \
                        'content-type' in cherrypy.request.headers and \
                        cherrypy.request.headers['content-type'] == 'application/json':
            length = int(cherrypy.request.headers['content-length'])
            json_string = cherrypy.request.body.read(length).decode("utf-8")
            update = telebot.types.Update.de_json(json_string)
            # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è 
            bot.process_new_updates([update])
            return ''
        else:
            raise cherrypy.HTTPError(403)

#–§—É–Ω–∫—Ü–∏—è –ª–æ–≥–æ–≤

def log_from_bot(message, ans):
    print("\n =========================================")
    from datetime import datetime
    print(datetime.now())
    now = datetime.now()
    print("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {0} {1}. id = {2} \n –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ : {3}".format(message.from_user.first_name,
                                                                             message.from_user.last_name,
                                                                             str(message.from_user.id),
                                                                             message.text))
    print('–ë–æ—Ç : ', ans)
    LOGFILE = open("/LOG_FILES/{0}.{1}.{2}:{3}:{4}.LOGZ".format(message.from_user.first_name,message.from_user.last_name,now.year, now.month, now.day),"a")
    LOGFILE.write("==================================================================================\n"
                  "–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {0} {1}. id = {2} \n–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ : {3} \n–ë–æ—Ç –æ—Ç–≤–µ—Ç–∏–ª:{5}\n–í—Ä–µ–º—è —Å–æ–æ–±—â–µ–Ω–∏—è : {4}\n".format(message.from_user.first_name,
                                                                                                                message.from_user.last_name,
                                                                                                                str(message.from_user.id),
                                                                                                                message.text,
                                                                                                                datetime.today(),ans))
    LOGFILE.close()

random.seed()
#–î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±–æ—Ç–∞


@bot.message_handler(func=lambda message: True, commands=['start'])
def Start_Command(message):
    ans = "–ë–æ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π\n–° –Ω–∞—Å—Ç—É–ø–∞—é—â–∏–º. üç∑\n‚ú®‚ú® ¬© Grow Community ‚ú®‚ú®"
    #bot.send_message(message.from_user.id, ans)
    userKeyboard = telebot.types.ReplyKeyboardMarkup(True, False, True)
    userKeyboard.row('–ü–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å :)')
    userKeyboard.row('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤')
    bot.send_message(message.chat.id, ans ,reply_markup=userKeyboard)
    log_from_bot(message,ans)
@bot.message_handler(func=lambda message: True, commands=['stop'])
def Stop_Command(message):
    ans = '–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ üç∫üçª, –° –Ω–∞—Å—Ç—É–ø–∞—é—â–∏–º :)'
    hide_userKeyboad = telebot.types.ReplyKeyboardRemove(True)
    bot.send_message(message.chat.id, ans ,reply_markup=hide_userKeyboad)
    log_from_bot(message,ans)

@bot.message_handler(func=lambda message: True, commands=['LetsRoll'])
def Roll(message):
    CountStr = open('Ball.dat','r')
    i = 0
    for line in CountStr:
        i+=1;
    CountStr.close()
    #FindStr = open("Ball.dat")
    #StrFind = FindStr.read()
    #Winner = StrFind.split('\n',)
    bot.send_message(message.chat.id,"–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ : {0}, –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!\n–í—Å–∫–æ—Ä–µ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–ª—è –≤—Ä—É—á–µ–Ω–∏—è –ø—Ä–∏–∑–∞".format(linecache.getline('Ball.dat',random.randint(1,i))))





#–†–µ–∞–∫—Ü–∏—è –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(func=lambda message: True,content_types=['text'])
def ReactOnText(message):
    if (message.text == "–ü–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å :)"):
        The_Participants = open('Ball.dat','r')
        Id_users = The_Participants.read()
        The_Participants.close()
        Participant = Id_users.count(str(message.from_user.id))
        if (Participant == 0):
            The_Participants = open('Ball.dat','a')
            The_Participants.write("Nickname : {0} {1}, id = {2}\n".format(message.from_user.first_name,message.from_user.last_name,str(message.from_user.id)))
            The_Participants.close()
            ans = "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –Ω–∞ —É—á–∞—Å—Ç–∏–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ :)"
            bot.send_message(message.chat.id,ans)
            log_from_bot(message,ans)
        else:
            ans = "–í—ã —É–∂–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ :) "
            bot.send_message(message.chat.id,ans)
            log_from_bot(message,ans)
    if (message.text == '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'):
        CountStr = open('Ball.dat', 'r')
        i = 0
        for line in CountStr:
            i += 1;
        CountStr.close()
        bot.send_message(message.chat.id, "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ : {0} üé±".format(i))



bot.remove_webhook()

bot.set_webhook(url=webhook_url_kekbase + webhook_url_path, certificate=open(webhook_SSL_cert, 'r'))
cherrypy.config.update({
    'server.socket_host': webhook_listen,
    'server.socket_port': webhook_port,
    'server.ssl_module': 'builtin',
    'server.ssl_certificate': webhook_SSL_cert,
    'server.ssl_private_key': webhook_SSL_PRIV
})

cherrypy.quickstart(WebhookServer(), webhook_url_path, {'/':{}})
